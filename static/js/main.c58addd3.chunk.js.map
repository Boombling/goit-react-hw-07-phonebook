{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/FilterContact/FilterContact.module.css","components/Phonebook/Phonebook.module.css","components/redux/phonebook/phonebook-actions.js","components/redux/phonebook/phonebook-operations.js","components/redux/phonebook/phonebook-selector.js","components/redux/phonebook/phonebook-reducer.js","components/Phonebook/Phonebook.js","components/ContactsList/ContactsList.js","components/FilterContact/FilterContact.js","App.js","components/redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactSuccess","addContactsError","addContactRequest","changeFilter","deleteContactSuccess","deleteContactsError","deleteContactRequest","name","number","dispatch","a","item","actions","axios","post","data","contactId","delete","then","catch","error","get","getValue","state","contacts","filter","getVisibleContact","createSelector","items","filterLowerCase","toLowerCase","includes","createReducer","_","payload","map","contact","alert","id","combineReducers","PhoneBook","nameInputId","shortid","generate","numberInputId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","section","form","htmlFor","lable","type","pattern","title","required","onChange","input","btn","Component","connect","phonebookOperations","contactList","phonebookSelector","onDeleteContact","list","onClick","event","phonebookActions","target","filters","App","fetchContacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReduser","devContacts","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c58addd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2chSs\",\"item\":\"ContactsList_item__XyAYZ\",\"btn\":\"ContactsList_btn__q2PzF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"FilterContact_section__1Sxi1\",\"lable\":\"FilterContact_lable__2qiLN\",\"filters\":\"FilterContact_filters__FocN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__3X4tm\",\"lable\":\"Phonebook_lable__37qRN\",\"input\":\"Phonebook_input__3aEZe\",\"btn\":\"Phonebook_btn__13Xku\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactsError = createAction(\"contacts/addContactsError\");\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\n\r\nconst changeFilter = createAction(\"contacts/filter\");\r\n\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactsError,\r\n  deleteContactSuccess,\r\n  deleteContactsError,\r\n  deleteContactRequest,\r\n};","import axios from \"axios\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"http://localhost:4040/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactsError(error)));\r\n};\r\n\r\nconst submit =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const item = { name, number };\r\n\r\n    dispatch(actions.addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post(\"http://localhost:4040/contacts\", item);\r\n      dispatch(actions.addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(actions.addContactsError(error));\r\n    }\r\n  };\r\n\r\nconst deletedContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`http://localhost:4040/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactsError(error)));\r\n};\r\n\r\nexport default {\r\n  submit,\r\n  deletedContact,\r\n  fetchContacts,\r\n};","import { createSelector } from \"reselect\";\r\n\r\nconst getValue = (state) => state.contacts.filter;\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContact = createSelector(\r\n  [getValue, getAllContacts],\r\n  (filter, items) => {\r\n    const filterLowerCase = filter.toLowerCase();\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filterLowerCase)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getValue,\r\n  getVisibleContact,\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst {\r\n  fetchContactsSuccess,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) =>\r\n    state.map((contact) => contact.name).includes(payload.name)\r\n      ? alert(`${payload.name} is already in contacts.`)\r\n      : [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './Phonebook.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { phonebookOperations } from '../redux/phonebook';\r\n\r\nclass PhoneBook extends Component {\r\n    state = {\r\n        // contacts: [],\r\n        name: '',\r\n        number: ''\r\n    }\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = evt => {\r\n        const { name, value } = evt.currentTarget;\r\n        this.setState({\r\n            id: shortid.generate(),\r\n            [name]: value,\r\n        })\r\n    };\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        // console.log(`${this.state}`);\r\n        this.props.onSubmit(this.state);\r\n\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <div className={styles.section}>\r\n                <form onSubmit={this.handleSubmit} className={styles.form}>\r\n                    <label htmlFor={this.nameInputId} className={styles.lable} >\r\n                        Name\r\n                        <br/>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                            id={this.nameInputId}\r\n                            className={styles.input}\r\n                        />\r\n                    </label>\r\n                    <label htmlFor={this.numberInputId} className={styles.lable}>\r\n                        Number\r\n                        <br/>\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            value={number}\r\n                            onChange={this.handleChange}\r\n                            id={this.numberInputId}\r\n                            className={styles.input}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" className={styles.btn}>Add contact</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (contact) => dispatch(phonebookOperations.submit(contact))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(PhoneBook);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { phonebookSelector, phonebookOperations } from '../redux/phonebook';\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => (\r\n    <>\r\n        <ul className={styles.list}>\r\n            {contactList.map(({ name, number, id }) => (\r\n                <li key={id} className={styles.item}>                   \r\n                    {name}: {number}{' '}\r\n                    <button onClick={() => onDeleteContact(id)} className={styles.btn}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </>\r\n)\r\nContactList.propTypes = {\r\n    contactList: PropTypes.array.isRequired\r\n}\r\n\r\n// const getVisibleContact = ( allContacts, filter) => {\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n// }\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    contactList: phonebookSelector.getVisibleContact(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: id => dispatch(phonebookOperations.deletedContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from './FilterContact.module.css';\r\nimport { phonebookActions, phonebookSelector } from '../redux/phonebook';\r\n\r\n\r\nconst FilterContact = ({ value, onChange }) => (\r\n    <div className={styles.section}>\r\n        <label className={styles.lable}>\r\n            Finde contact by name\r\n            <br />\r\n            <input type='text' value={value} onChange={onChange} className={styles.filters} />\r\n        </label>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    value: phonebookSelector.getValue(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: (event) => dispatch(phonebookActions.changeFilter(event.target.value))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContact)","import React, { Component } from 'react';\r\nimport PhoneBook from './components/Phonebook/Phonebook';\r\nimport ContactList from './components/ContactsList/ContactsList';\r\nimport FilterContact from './components/FilterContact/FilterContact';\r\nimport './App.css';\r\nimport { connect } from \"react-redux\";\r\nimport { phonebookOperations } from './components/redux/phonebook';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className='title'>PhoneBook</h1>\r\n        <PhoneBook />\r\n        <h2 className='title'>Contacts</h2>\r\n        <FilterContact />\r\n        <ContactList  />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","// import phonebookReducer from \"./phonebook/phonebook-reducer\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport { phonebookReduser } from './phonebook';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: phonebookReduser },\r\n  middleware,\r\n  devContacts: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}